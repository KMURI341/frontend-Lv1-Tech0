name: Build and deploy Node.js app to Azure Web App - tech0-gen8-step4-pos-app-113

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # 1) ソースコードをチェックアウト
      - uses: actions/checkout@v4

      # 2) Node.js のセットアップ
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # 3) npm install & build & test (ここで環境変数を指定)
      - name: npm install, build, and test
        env:
          NEXT_PUBLIC_API_URL: "https://tech0-gen8-step4-pos-app-114.azurewebsites.net"
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
      
      # 3.1) ./.next ディレクトリの構造を表示して確認
      - name: List ./.next directory structure
        run: ls -R ./.next
      
      # 4) ビルド成果物を deploy フォルダにまとめる
      - name: Copy artifact for deployment job
        run: |
          rm -rf deploy
          mkdir deploy
          cp -r ./.next/standalone/* ./deploy
          mkdir -p ./deploy/.next

          if [ -d "./.next/static" ]; then
            cp -r ./.next/static ./deploy/.next/static
          fi

          if [ -f "./.next/BUILD_ID" ]; then
            cp ./.next/BUILD_ID ./deploy/.next/
          fi

          if [ -f "./.next/routes-manifest.json" ]; then
            cp ./.next/routes-manifest.json ./deploy/.next/
          fi

          if [ -f "./.next/prerender-manifest.json" ]; then
            cp ./.next/prerender-manifest.json ./deploy/.next/
          fi

          if [ -d "./.next/server" ]; then
            mkdir -p ./deploy/.next/server
            cp -r ./.next/server/* ./deploy/.next/server
          fi

          if [ -d "./public" ]; then
            cp -r ./public ./deploy
          fi

          ls -R ./deploy

      # 5) deploy フォルダを ZIP 化
      - name: Zip artifact for deployment
        run: zip release.zip ./deploy -r

      # 6) アーティファクトをアップロード
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      # 7) アーティファクトをダウンロード
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      # 8) ZIP を解凍
      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      # 9) Azure Web App へデプロイ
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'tech0-gen8-step4-pos-app-113'
          slot-name: 'Production'
          package: ./deploy
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_39476555C0454AF8943766C12B9C78A5 }}
